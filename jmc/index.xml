<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jmcs on My New Hugo Site</title>
    <link>http://example.org/jmc/index.xml</link>
    <description>Recent content in Jmcs on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://example.org/jmc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>jmc Roadmap</title>
      <link>http://example.org/jmc/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/jmc/roadmap/</guid>
      <description>&lt;p&gt;A few high priorities for jmc features are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for multiple pieces of album artwork per album, including PDFs.&lt;/li&gt;
&lt;li&gt;More thorough, and preferably automatically tagged metadata.&lt;/li&gt;
&lt;li&gt;Custom fields for media (think &amp;ldquo;featuring&amp;rdquo;, or &amp;ldquo;mood&amp;rdquo;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While some of these features were half-written and planned for the current release, I realized that the best way to support them would likely be to introduce compatibility with the &lt;a href=&#34;http://beets.io/&#34;&gt;beets&lt;/a&gt; project, which is already a wonderful media management system for macOS users that supports auto-tagging, artwork management and much more. Since supporting beets will involve migrating from jmc&amp;rsquo;s current persistence framework (Core Data) toward SQLite, I elected not to complete half-baked versions of the above, only to rewrite large swaths of them later on.&lt;/p&gt;

&lt;p&gt;Note: this upcoming migration has the side effect that subsequent versions of jmc will probably require you to re-import your library.&lt;/p&gt;

&lt;p&gt;Some simple features that need implementation on jmc right now include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Non-placeholder icons.&lt;/li&gt;
&lt;li&gt;A location manager that offers a pleasant interface for viewing and manipulating where jmc thinks media files are. Also, media directory monitoring using FSEvents to watch directories for changes that warrant metadata modification to application entities.&lt;/li&gt;
&lt;li&gt;Advanced playback features like crossfades, custom start-stop playback positions and volume settings for tracks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A few slightly larger things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fancier views for media akin to the iTunes album and artist views (but which aren&amp;rsquo;t broken).&lt;/li&gt;
&lt;li&gt;FLAC support. Currently jmc uses &lt;a href=&#34;https://developer.apple.com/reference/avfoundation/avaudioengine&#34;&gt;AVAudioEngine&lt;/a&gt; for audio playback. I am currently investigating solutions here.&lt;/li&gt;
&lt;li&gt;A discrete, server-only version of jmc that runs in the background and serves media from a volume to jmc clients on a local area network, and beyond (think Plex). This is basically jmc minus the GUI.&lt;/li&gt;
&lt;li&gt;A better way of displaying and adding these “probably-always-available” remote libraries other than the Shared Libraries tab of the source list.&lt;/li&gt;
&lt;li&gt;Making shared libraries better and less crash-prone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Still more stuff:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make jmc Applescript-able&lt;/li&gt;
&lt;li&gt;Last.fm integration? Last.fm seems to be on its way out, but there are few alternatives.&lt;/li&gt;
&lt;li&gt;A MiniPlayer!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, jmc currently doesn&amp;rsquo;t play podcasts or videos. This functionality will likely arrive in some capacity in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://example.org/jmc/&#34;&gt;Back to jmc&lt;/a&gt; | &lt;a href=&#34;http://example.org/&#34;&gt;Home&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>